Имена: Виктор Узунов, Петър Кирилов
Начална година: 2025 Програма: бакалавър, (СИ) Курс: 3
Тема: Управление на университетски курсове с визуализация на зависимости
Дата: 2025-06-9 Предмет: w21prj_SI _final имейл: uzun-vvict-r@gmail.c-m, petar.kiril-v17@gmail.c-m

преподавател: проф. д-р Милен Петров

ТЕМА: w21/n-mer 24.1
1. Условие
Проектът представлява уеб базирана система за управление на университетски курсове. Основната цел е да предостави на потребителите възможност да управляват своите курсове, да дефинират зависимости (предварителни курсове) между тях и да визуализират тези зависимости под формата на интерактивен граф. Системата включва функционалности за потребителска регистрация и вход, както и глобални курсове, видими за всички потребители.

Роли:
•	Потребител (User): Може да се регистрира, влиза в системата, добавя, редактира и изтрива собствени курсове, управлява техните зависимости, търси и филтрира курсове, и визуализира своите курсове и глобалните курсове в граф.
•	Система (System): Специален "потребител", който притежава "глобални" курсове. Тези курсове са видими за всички потребители и могат да бъдат използвани като предварителни курсове (prerequisites) от всички. Само администратор (или в текущата имплементация, ако потребителят се логне като "system" user, което не е предвидено за обикновен логин) би могъл да управлява тези глобални курсове.
Функционални изисквания:
•	Потребителска регистрация и вход.
•	CRUD (Create, Read, Update, Delete) операции за курсове, привързани към конкретен потребител.
•	Управление на зависимости между курсовете (един курс може да има няколко предварителни курса).
•	Филтриране и търсене на курсове по име, код или департамент.
•	Интерактивна визуализация на зависимостите между курсовете под формата на граф.
•	Разграничаване между потребителски курсове и глобални курсове (системата).
•	Imp-rt/Exp-rt на CSV файл

Нефункционални изисквания:
•	Удобен и интуитивен дизайн
•	Сигурност и защита на данните
•	Бързо зареждане на визуализациите
•	Лесна конфигурация и инсталация

3. Теория – анализ и проектиране на решението
Приложението е проектирано като трислойна архитектура:
•	Представителен слой (Fr-ntend): Отговаря за потребителския интерфейс. Използва HTML за структура, Tailwind CSS за стилизиране и адаптивен дизайн, и чист JavaScript за интерактивност (отваряне на модални прозорци, филтриране на падащи менюта, визуализация на граф).
•	Бизнес логика (Backend): Реализирана е на PHP. Този слой обработва потребителските заявки (вход, регистрация, CRUD операции), валидира данните и комуникира със слоя за данни. Функциите са организирани в модули (auth.php, c-urse_manager.php).
•	Слой за данни (Database): Използва MySQL за съхранение на данните.
Декомпозиция на приложението:
•	Модул за потребители (auth.php): Функции за регистрация, вход и проверка на автентикация.
•	Модул за управление на курсове (c-urse_manager.php): Функции за добавяне, редактиране, изтриване и извличане на курсове и техните зависимости.
•	API за граф (api/c-urses_graph_data.php): Специализиран ендпойнт, който връща данните за курсове и зависимости във формат, подходящ за vis.js.
•	Шаблони (templates/): Отделни PHP файлове, които съдържат HTML структурата на различните части на приложението (главно табло, форми, модални прозорци), включени от основните PHP скриптове.
Ключова промяна в проектирането:
•	Промяна на първичен ключ: В процеса на разработка, първичният ключ за таблицата c-urses беше променен от автоматично генерирано числово id на c-urse_c-de (код на курса). Това наложи промени в логиката на приложението и на базата данни, за да се гарантира, че c-urse_c-de е уникален глобално и служи като основен идентификатор за курсовете и техните зависимости. Тази промяна подобрява четимостта и улеснява препратките към курсове.


4. Използвани технологии
•	PHP: Версия 8.1 (използвана в D-cker контейнера).
•	MySQL: Система за управление на релационни бази данни.
•	D-cker: Платформа за контейнеризация, използвана за пакетиране на приложението и неговите зависимости в изолирани контейнери.
•	D-cker C-mp-se: Инструмент за дефиниране и стартиране на многоконтейнерни D-cker приложения (за PHP-FPM, Nginx и MySQL).
•	C-mp-ser: Мениджър на зависимости за PHP. Използван за автоматично зареждане (aut-l-ading) на файлове и бъдещо управление на външни библиотеки.
•	GitHub Acti-ns: CI/CD платформа за автоматизация на работни потоци (w-rkfl-w) за проверка на кода.
•	vis.js (Netw-rk m-dule): JavaScript библиотека за динамична, интерактивна визуализация на мрежови графи (курсови зависимости).
•	Tailwind CSS: Utility-first CSS framew-rk за бързо и адаптивно стилизиране на потребителския интерфейс.
•	HTML, JavaScript (Vanilla JS): Стандартни уеб технологии за фронтенд разработка.


5. Инсталация, настройки и Dev-ps
За инсталация на приложението:

1. Клониране на репозиторито:
```bash
git cl-ne https://github.c-m/y-urusername/university-c-urse-manager.git
cd university-c-urse-manager
```

2. Стартиране с D-cker C-mp-se:
```bash
d-cker-c-mp-se up -d
```

3. Приложението ще бъде достъпно на http://l-calh-st:8000

Примерни акаунти:
- Студент: student@example.c-m / passw-rd123
- Администратор: admin@example.c-m / admin123

6. Кратко ръководство на потребителя
1.	Регистрация:
-	Отворете http://l-calh-st:8000.
-	Използвайте секцията "Register". Въведете желано потребителско име и парола (минимум 6 символа).
-	Кликнете "Register New Acc-unt". Ще видите съобщение за успех или грешка (напр. "Username already exists.").

2.	Вход:
-	След успешна регистрация или ако вече имате акаунт, използвайте секцията "L-gin".
-	Въведете вашето потребителско име и парола.
-	Кликнете "L-gin". При успешен вход ще бъдете пренасочени към страницата с курсове.

3.	Главно табло (My C-urses):
-	След вход, ще видите списък с всички ваши курсове, както и глобалните курсове, предоставени от системата.
-	Над списъка има форма за добавяне на нов курс, както и полета за търсене и филтриране.

4.	Добавяне на нов курс:
-	В секцията "Add New C-urse" попълнете:
-	C-urse C-de: Уникален код на курса (напр. "PR-G101").
-	C-urse Name: Име на курса (напр. "Основи на програмирането").
-	Credits: Брой кредити (число, минимум 1).
-	Department: Изберете департамент от падащото меню.
-	Prerequisites: Можете да търсите и изберете един или повече предварителни курсове (задръжте Ctrl/Cmd и кликнете).
-	Кликнете "Add C-urse". Ще видите съобщение за успех или грешка.

5.	Редактиране на курс:
-	В списъка с курсове, до курса, който искате да редактирате, кликнете бутон "Edit".
-	Ще се отвори модален прозорец с попълнени текущи данни на курса.
-	C-urse C-de е деактивирано поле, тъй като кодът на курса е вече първичен ключ и не може да бъде променян директно.
-	Променете името, кредитите, департамента или предварителните курсове.
-	Кликнете "Update C-urse".

6.	Изтриване на курс:
-	До курса, който искате да изтриете, кликнете бутон "Delete".
-	Ще се появи потвърждаващо съобщение. Потвърдете.

7.	Преглед на графа (C-urse Dependency Graph):
-	От навигационното меню в горната част на страницата, кликнете на "C-urse Graph".
-	Ще видите интерактивен граф, визуализиращ всички ваши курсове и глобалните курсове, както и техните зависимости.
-	Можете да влачите възли, за да ги пренаредите, да скролвате за увеличение/намаляване и да кликнете върху възел (курс) за да видите повече детайли в модален прозорец.


7. Примерни данни
Базата данни се инициализира автоматично при първото стартиране на приложението. Примерните данни включват:
- Курсове с различни нива на сложност
- Зависимости между курсовете
- Потребителски акаунти с различни роли

8. Описание на програмния код
Основни файлове и тяхната функционалност:

- auth.php: Управление на автентикацията
- c-urse_manager.php: Основна бизнес логика
- c-nfig.php: Конфигурационни настройки
- api/: REST API endp-ints за визуализация
- templates/: HTML шаблони
- js/: JavaScript файлове за визуализация

9. Приноси на студента, ограничения и възможности за бъдещо разширение
Виктор Узунов (0MI0600213):
- Разработка на системата за автентикация
- Имплементация на визуализацията на курсовете
- Интеграция на D-cker средата

Петър Кирилов (8MI0600153):
- Разработка на бизнес логиката
- Създаване на API endp-ints
- Имплементация на управлението на курсовете

Възможности за разширение:
- Добавяне на система за оценки
- Интеграция с други университетски системи
- Разширяване на визуализациите
- Добавяне на известия и съобщения

10. Какво научих
Виктор Узунов:
- Работа с D-cker и контейнеризация
- Разработка на интерактивни визуализации
- Имплементация на сигурни системи за автентикация

Петър Кирилов:
- Разработка на REST API
- Работа с MySQL бази данни
- Имплементация на бизнес логика в PHP

11. Използвани източници
- PHP D-cumentati-n: https://www.php.net/d-cs.php
- MySQL D-cumentati-n: https://dev.mysql.c-m/d-c/
- D-cker D-cumentati-n: https://d-cs.d-cker.c-m/
- JavaScript Graph Visualizati-n Libraries D-cumentati-n

Предал (подпис): ………………………….

/фн, имена, спец., група/

Приел (подпис): ………………………….

/проф. д-р Милен Петров/