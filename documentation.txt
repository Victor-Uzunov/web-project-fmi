Имена: Виктор Узунов, Петър Кирилов
Начална година: 2024 Програма: бакалавър, (СИ) Курс: 4
Тема: Управление на университетски курсове с визуализация на зависимости
Дата: 2024-03-19 Предмет: w21prj_SI _final имейл: uzunovvictor@gmail.com, petar.kirilov17@gmail.com

преподавател: доц. д-р Милен Петров

Предаване: Задачата се предава в архив с попълнен настоящия документ, проекта/проектите с кодовете, README.txt файл, който описва съдържанието на архива; папка с допълнителни компоненти и използвани ресурси, архива да се казва 9999_final.zip. (Успех!). (Редактирайте маркираните зони в жълто с коректната информация)

ТЕМА: w21/nomer ...
1. Условие
Разработка на уеб приложение за управление на университетски курсове с възможност за визуализация на зависимостите между тях. Приложението трябва да позволява на студенти и администратори да управляват курсове, да проследяват зависимости между тях и да визуализират прогреса си.

2. Въведение – извличане на изисквания
Роли:
- Студент: Може да преглежда курсове, да се записва в тях и да вижда своите прогреси
- Администратор: Може да управлява курсове, да създава зависимости и да администрира потребители

Функционални изисквания:
- Система за автентикация и оторизация
- Визуализация на зависимости между курсове
- Управление на курсове и записвания
- Проследяване на академичен прогрес
- Управление на потребителски роли

Нефункционални изисквания:
- Отзивчив дизайн за всички устройства
- Сигурност и защита на данните
- Бързо зареждане на визуализациите
- Лесна конфигурация и инсталация

3. Теория – анализ и проектиране на решението
Приложението следва три-слойна архитектура:
- Презентационен слой: HTML, CSS, JavaScript
- Бизнес логика: PHP
- Слой за данни: MySQL

Модули:
- Автентикация (auth.php)
- Управление на курсове (course_manager.php)
- API за визуализация (api/)
- Конфигурация (config.php)
- Шаблони (templates/)

4. Използвани технологии
- PHP 8.1
- MySQL 8.0
- Docker & Docker Compose
- HTML5, CSS3, JavaScript
- Apache Web Server
- Git за версионен контрол

5. Инсталация, настройки и DevOps
За инсталация на приложението:

1. Клониране на репозиторито:
```bash
git clone https://github.com/yourusername/university-course-manager.git
cd university-course-manager
```

2. Стартиране с Docker Compose:
```bash
docker-compose up -d
```

3. Приложението ще бъде достъпно на http://localhost:8000

Примерни акаунти:
- Студент: student@example.com / password123
- Администратор: admin@example.com / admin123

6. Кратко ръководство на потребителя
1. Вход в системата
2. Преглед на всички курсове
3. Визуализация на зависимости между курсове
4. Записване в курсове
5. Проследяване на прогреса

7. Примерни данни
Базата данни се инициализира автоматично при първото стартиране на приложението. Примерните данни включват:
- Курсове с различни нива на сложност
- Зависимости между курсовете
- Потребителски акаунти с различни роли

8. Описание на програмния код
Основни файлове и тяхната функционалност:

- auth.php: Управление на автентикацията
- course_manager.php: Основна бизнес логика
- config.php: Конфигурационни настройки
- api/: REST API endpoints за визуализация
- templates/: HTML шаблони
- js/: JavaScript файлове за визуализация

9. Приноси на студента, ограничения и възможности за бъдещо разширение
Виктор Узунов (0MI0600213):
- Разработка на системата за автентикация
- Имплементация на визуализацията на курсовете
- Интеграция на Docker средата

Петър Кирилов (8MI0600153):
- Разработка на бизнес логиката
- Създаване на API endpoints
- Имплементация на управлението на курсовете

Възможности за разширение:
- Добавяне на система за оценки
- Интеграция с други университетски системи
- Разширяване на визуализациите
- Добавяне на известия и съобщения

10. Какво научих
Виктор Узунов:
- Работа с Docker и контейнеризация
- Разработка на интерактивни визуализации
- Имплементация на сигурни системи за автентикация

Петър Кирилов:
- Разработка на REST API
- Работа с MySQL бази данни
- Имплементация на бизнес логика в PHP

11. Използвани източници
- PHP Documentation: https://www.php.net/docs.php
- MySQL Documentation: https://dev.mysql.com/doc/
- Docker Documentation: https://docs.docker.com/
- JavaScript Graph Visualization Libraries Documentation

Предал (подпис): ………………………….

/фн, имена, спец., група/

Приел (подпис): ………………………….

/проф. д-р Милен Петров/

Препоръки за предаване на проекта (ИЗТРИЙ до края-при предаване на проекта!)
Заб1. (w21. Изтрийте текста в зелено по-горе в документацията, а където се искат важите данни – в жълто - модифицирайте коректната информация, и махнете оцветяването.

Заб. Спазвайки препоръките по-долу биха спомогнали да направите добри проекти по Уеб технологии.

Финален проект (инструкции към 7 издание)
2. Изпитни проекти: (настоящият документ може да съхраните като .docx . За хората, ползващи редактори, различни от MS Office – освен docx/rtf да качат и pdf версия на документацията – за по-сигурно.)

2.1. Темите за изпитните проекти трябва да са съгласувани с мен на място (вече няколко хора го направиха); като тема си запишете ф.н. в гугъл докса - там пише как се записвате (в коя колона и какъв разделител да ползвате); Обем на проектите: 30 човеко-часа на човек на проект. Това е доста относително, но все пак е нещо.

2.2. За документация на проекта ползвайте шаблона (ще гледам да го кача скоро); Задължително потребителска документация (а.к.а. userguide) - няколко скрийншота с кратко разяснение; условие на проекта (т.е. какво сте разтълкували сме се разбрали да правите - то може и да се различава от описанието дадено в гугъл докс-а към момента); както и инструкции за инсталиране; за защитата - ще дам няколко дати през сесията/преди сесията + официалните дати, за който не успее да мине преди това; за защитата - кода, документацията/необходими библиотеки/среди, инсталации - за инсталирането се предават на DVD (ако има още такова нещо като CD-може и на CD). Може по изключение да сложа И форма за качване само на документацията и програмен код и в мудъл, НО идеята е, че ако няма интернет (да речем е паднал мудъла, спрял е тока и т.н. - само по съдържанието на диска, който сте предали да може да се инсталира, подкара и тества проекта); Също така разпечатвате първа страница от проекта (с името ви и заданието), 1 страница от userguide-а и последната страница, където пише предал/приел (там пише вашите и моите имена), т.е. не е необходимо да печатите цялата документация - така или иначе ще я има в електронен формат; За хората, които не ползват MS Office - ще помоля освен изходният документ в docx/rtf, да качат нещата и е pdf формат, т.к. често такъв тип документация се размества и не се чете. В кода сложете и MySql sql скрипт със създаване на таблицата и скриптове, задаващи примерни данни (т.е. може да тестваме приложението дали работи без данни, и ако за да се види пълната прелест на проекта е нужно да се вкарат предварително данни - sql и/или снимки/звуци и т.н. може да ги подготвите на диска или ако е указано-в мудъл или облака към курса – ако има). БЕЗ флашки!

2.3. Срок за защита на изпитните проекти - до изпита. За съгласуване на теми - ми пишете да се разберем за час за консултации за проектите.

(w21) Предаване на проекта става 48ч. преди изпита ЗАДЪЛЖИТЕЛНО по указаният начин от преподавателя (най-вероятно мудъл). Това важи и за хората, независимо явяващи се извънредно, на редовна или поправителна сесия, финализиране и последни промени може да качвате и преди да влезнете за защита.

Вижте и инструкциите към 6 издание – които не противоречат с инструкциите за настоящото издание – са валидни и сега.

Финален проект (инструкции към 6 издание)
Заб. Спазвайки препоръките по-долу биха спомогнали да направите добри проекти по Уеб технологии.

Задължително: Реферата да е в zip файл с име на зип файла: fakNo_final.zip където вместо fanNo пишете факултетният си номер/а (според инструкциите, зададени във форума на курса).

Още няколко упътвания:
I. АРХИТЕКТУРА НА УЕБ СИСТЕМАТА: Да има три-слойна архитектура (Препоръки: 1. презентационен слой - css/js/html, 2. БД: MySql и като допълнение по желание може да имате импорт/експорт към XML/json/csv; 3. Бизнес логика - Php)

II. ФУНКЦИОНАЛНИ ХАРАКТЕРИСТИКИ: Съгласуват се с преподавателя - избира се темата, а каква да е функционалността - питате на лекции или се явявате на предварителна защита, където съгласувате обхвата на изискванията; Да се познават и спазват добрите практики, завършеност на функционалността - според сложността на приложението – 30 човеко-часа);

III. НЕ-Функционални характеристики:

- Конфигурируемост (лесно да може да се инсталира - например: смяна на едно место ако се смени физически папката на сървъра - да е в под-папка, смяна на адреса - IP/URL, смяна на име/парола/

- Разширяемост - лесно да може да се разширява функционалността на различните слоеве;

- Документация - без да се пуска проекта - да може да се ориентира в неговата функционалност, как се настройва, точки на разширение на отделните слоеве- ако има особеност, примерни данни за тестване - администраторски акаунти, ръководство на потребителя за различните роли – екраннк снимки – т.нар „скрийншоти“ с номер и кратко заглавие).

IV. Други изисквания, зададени на лекция (следете лекциите, форумите и групата).

Заб. Има вероятност да пусна нова инстанция на системата за рефератите, но този път за проекти, където в html да сложите документацията си (т.е. подобен на този шаблон, но в html формат).

За изискването конфигурируемост (описвате в документацията), се очаква (само концептуална идея, може да се представи и реализира по много начини), нещо от вида:

<?php //conf.php (реално в документацията се описва в т. DevOps

$vhosts = <<<EOT

#############################

## MP-1.10.1: w11ref.w3c.fmi.uni-sofia.bg

#############################

<VirtualHost *:80>

ServerAdmin milenp@fmi.uni-sofia.bg

DocumentRoot "C:/xampp/htdocs/w11ref.w3c.fmi.uni-sofia.bg/_PUB"

DirectoryIndex index.php

ServerName w11ref.w3c.fmi.uni-sofia.bg

# ServerAlias 9999.w3c.fmi.uni-sofia.bg

<Directory "C:/BACKUP_SYSTEMS/htdocs/w11ref.w3c.fmi.uni-sofia.bg/_PUB">

Options All

AllowOverride All

Require all granted

</Directory>

</VirtualHost>

EOT;

//echo "<pre>$vhosts . </pre>";echo "<pre>$vhosts . </pre>";

// $configs = include('conf.php');

//if - uncomment/comment -> in calling part can be used as $configs['vhosts'];

return (object) array(

//0. sys_cfg

'cfg_ver' => '1',


//1. sys_cfg

'cfg_system_mgmt' => 'w11ref',

'cfg_system_name' =>'www_11ed_referats',

'cfg_dns_prefix' => 'w11ref',

'cfg_dns_sufix' => 'w3c.fmi.uni-sofia.bg',

'HTTP_URL_PREFIX' => "http://w11ref.w3c.fmi.uni-sofia.bg",,

//2. db_cfg (from queries.php)

'DB_SERVERNAME' => '127.0.0.1',

'DB_USERNAME' => 'w11ed_fn9999',

'DB_PASSWORD' => ' w11ed_fn9999',

'DB_NAME' => ' w11ed_fn9999',



//9. vhost

'vhosts' => $vhosts,

'vhosts_ServerAdmin' => 'milenp@fmi.uni-sofia.bg',

'vhosts_DocumentRoot' => 'C:/xampp/htdocs/w11ref.w3c.fmi.uni-sofia.bg/_PUB',

'vhosts_port' => 80,

'vhosts_ServerName' => 'w11ref.w3c.fmi.uni-sofia.bg',


);

?>

За да се използва:

$configs = include('conf.php');

header("Location: ". $configs->HTTP_URL_PREFIX."/choose.php");

Други варианти за конфигурация:

<?php

//install.php - can called once, initiating database, creating configuration file of doesnt exists, etc.

//Optional:: ConfigPanel.php -> Configures/changes settings of app

//Required: config.php, db_sql.txt

//required: help.php (can be part of documentation)...

//or config.ini -> със същите настройки;

class Config {

$SITE_FN = 61999; //can be used bellow

$SITE_CREATOR = "Your Name(s)";

$SITE_ADMIN_EMAIL = "your@email.com";

$SITE_INFO = "This project was created during ...year, on Web Technologies, Sofia University, FMI, lead by:

Name of Instructor, assistant: Name-Of-Assistant";

$SITE_URL="http://loremipsum.fmi.uni-sofia.bg/WEBTECH/www_6ed_prj/61999_alg_animation";

$ROOT_FOLDER="c:\xampp\htdocs\www_6ed_prj/61999_alg_animation"

$DB_USER="61999_user";

$DB_PASS="61999_pass";

$DB_NAME="www_6ed_61999_alg_animation";

$SITE_DESCRIPTION="What is ready, and what can be improved for future";

$PROJECT_REQ="...(from documentation)";

}

?>

История на версиите

Последна модификация 0.3 /2020-01-06/by MP
Последна модификация 0.2/2018-12-09/by MP
Успех!